{"ast":null,"code":"var _jsxFileName = \"C:\\\\it-incubator\\\\ignat-1\\\\ignat-april1\\\\src\\\\s2-homeworks\\\\hw02\\\\HW2.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Affairs from './affairs/Affairs';\nimport s2 from '../../s1-main/App.module.css';\n/*\n* 1 - описать типы AffairPriorityType, AffairType\n* 2 - указать нужный тип для defaultAffairs\n* 3 - дописать типы и логику функции filterAffairs и проверить её тестами\n* 4 - выполнить пункт 3 для функции deleteAffair\n* 5 - указать нужный тип в useState с affairs\n* 6 - дописать тип и логику функции deleteAffairCallback\n* 7 - в файле Affairs.tsx дописать типизацию пропсов\n* 8 - в файле Affairs.tsx дописать логику функций setAll, setHigh, setMiddle, setLow\n* 9 - в файле Affair.tsx дописать типизацию пропсов\n* 10 - в файле Affair.tsx дописать функции deleteCallback и использовать\n* 11 - в файле Affair.tsx отобразить приходящие данные\n* */\n// types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// constants\nconst defaultAffairs = [// need to fix any\n{\n  _id: 1,\n  name: 'React',\n  priority: 'high'\n}, // студенты могут изменить содержимое name и количество элементов в массиве, ...priority не менять!\n{\n  _id: 2,\n  name: 'anime',\n  priority: 'low'\n}, {\n  _id: 3,\n  name: 'games',\n  priority: 'low'\n}, {\n  _id: 4,\n  name: 'work',\n  priority: 'high'\n}, {\n  _id: 5,\n  name: 'html & css',\n  priority: 'middle'\n}]; // pure helper functions\n\nexport const filterAffairs = (affairs, filter) => {\n  if (filter === \"all\") return affairs;\n  return affairs.filter(el => el.priority === filter);\n};\nexport const deleteAffair = (affairs, _id) => {\n  return affairs.filter(el => el._id !== _id);\n};\n\nfunction HW2() {\n  _s();\n\n  const [affairs, setAffairs] = useState(defaultAffairs); // need to fix any\n\n  const [filter, setFilter] = useState('all');\n  const filteredAffairs = filterAffairs(affairs, filter);\n\n  const deleteAffairCallback = _id => setAffairs(deleteAffair(affairs, _id));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw2',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hwTitle,\n      children: \"Homework #2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hw,\n      children: /*#__PURE__*/_jsxDEV(Affairs, {\n        data: filteredAffairs,\n        filter: filter // ого useState передаем!\n        ,\n        setFilter: setFilter // ого useState передаем!\n        ,\n        deleteAffairCallback: deleteAffairCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HW2, \"+TelzeQZkAtJRt5r5kdeeufTCcc=\");\n\n_c = HW2;\nexport default HW2;\n\nvar _c;\n\n$RefreshReg$(_c, \"HW2\");","map":{"version":3,"names":["React","useState","Affairs","s2","defaultAffairs","_id","name","priority","filterAffairs","affairs","filter","el","deleteAffair","HW2","setAffairs","setFilter","filteredAffairs","deleteAffairCallback","hwTitle","hw"],"sources":["C:/it-incubator/ignat-1/ignat-april1/src/s2-homeworks/hw02/HW2.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport Affairs from './affairs/Affairs'\nimport s2 from '../../s1-main/App.module.css'\n\n/*\n* 1 - описать типы AffairPriorityType, AffairType\n* 2 - указать нужный тип для defaultAffairs\n* 3 - дописать типы и логику функции filterAffairs и проверить её тестами\n* 4 - выполнить пункт 3 для функции deleteAffair\n* 5 - указать нужный тип в useState с affairs\n* 6 - дописать тип и логику функции deleteAffairCallback\n* 7 - в файле Affairs.tsx дописать типизацию пропсов\n* 8 - в файле Affairs.tsx дописать логику функций setAll, setHigh, setMiddle, setLow\n* 9 - в файле Affair.tsx дописать типизацию пропсов\n* 10 - в файле Affair.tsx дописать функции deleteCallback и использовать\n* 11 - в файле Affair.tsx отобразить приходящие данные\n* */\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number // need to fix any\n    name: string // need to fix any\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'}, // студенты могут изменить содержимое name и количество элементов в массиве, ...priority не менять!\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\n    if(filter === \"all\") return affairs\n    return affairs.filter(el => el.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\n    return affairs.filter(el => el._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n\n    return (\n        <div id={'hw2'}>\n            <div className={s2.hwTitle}>Homework #2</div>\n            <div className={s2.hw}>\n                <Affairs\n                    data={filteredAffairs}\n                    filter={filter}          // ого useState передаем!\n                    setFilter={setFilter}    // ого useState передаем!\n                    deleteAffairCallback={deleteAffairCallback}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default HW2\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,EAAP,MAAe,8BAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AASA;AACA,MAAMC,cAA4B,GAAG,CAAE;AACnC;EAACC,GAAG,EAAE,CAAN;EAASC,IAAI,EAAE,OAAf;EAAwBC,QAAQ,EAAE;AAAlC,CADiC,EACU;AAC3C;EAACF,GAAG,EAAE,CAAN;EAASC,IAAI,EAAE,OAAf;EAAwBC,QAAQ,EAAE;AAAlC,CAFiC,EAGjC;EAACF,GAAG,EAAE,CAAN;EAASC,IAAI,EAAE,OAAf;EAAwBC,QAAQ,EAAE;AAAlC,CAHiC,EAIjC;EAACF,GAAG,EAAE,CAAN;EAASC,IAAI,EAAE,MAAf;EAAuBC,QAAQ,EAAE;AAAjC,CAJiC,EAKjC;EAACF,GAAG,EAAE,CAAN;EAASC,IAAI,EAAE,YAAf;EAA6BC,QAAQ,EAAE;AAAvC,CALiC,CAArC,C,CAQA;;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAwBC,MAAxB,KAA6D;EACtF,IAAGA,MAAM,KAAK,KAAd,EAAqB,OAAOD,OAAP;EACrB,OAAOA,OAAO,CAACC,MAAR,CAAeC,EAAE,IAAIA,EAAE,CAACJ,QAAH,KAAgBG,MAArC,CAAP;AACH,CAHM;AAIP,OAAO,MAAME,YAAY,GAAG,CAACH,OAAD,EAAwBJ,GAAxB,KAAsD;EAC9E,OAAOI,OAAO,CAACC,MAAR,CAAeC,EAAE,IAAIA,EAAE,CAACN,GAAH,KAAWA,GAAhC,CAAP;AACH,CAFM;;AAIP,SAASQ,GAAT,GAAe;EAAA;;EACX,MAAM,CAACJ,OAAD,EAAUK,UAAV,IAAwBb,QAAQ,CAAeG,cAAf,CAAtC,CADW,CAC0D;;EACrE,MAAM,CAACM,MAAD,EAASK,SAAT,IAAsBd,QAAQ,CAAa,KAAb,CAApC;EAEA,MAAMe,eAAe,GAAGR,aAAa,CAACC,OAAD,EAAUC,MAAV,CAArC;;EACA,MAAMO,oBAAoB,GAAIZ,GAAD,IAAiBS,UAAU,CAACF,YAAY,CAACH,OAAD,EAAUJ,GAAV,CAAb,CAAxD;;EAGA,oBACI;IAAK,EAAE,EAAE,KAAT;IAAA,wBACI;MAAK,SAAS,EAAEF,EAAE,CAACe,OAAnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAEf,EAAE,CAACgB,EAAnB;MAAA,uBACI,QAAC,OAAD;QACI,IAAI,EAAEH,eADV;QAEI,MAAM,EAAEN,MAFZ,CAE6B;QAF7B;QAGI,SAAS,EAAEK,SAHf,CAG6B;QAH7B;QAII,oBAAoB,EAAEE;MAJ1B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;GArBQJ,G;;KAAAA,G;AAuBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}